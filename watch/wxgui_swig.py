# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_wxgui_swig', [dirname(__file__)])
        except ImportError:
            import _wxgui_swig
            return _wxgui_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_wxgui_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _wxgui_swig = swig_import_helper()
    del swig_import_helper
else:
    import _wxgui_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
    """high_res_timer_now() -> gr::high_res_timer_type"""
    return _wxgui_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
    """high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
    return _wxgui_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
    """high_res_timer_tps() -> gr::high_res_timer_type"""
    return _wxgui_swig.high_res_timer_tps()

def high_res_timer_epoch():
    """high_res_timer_epoch() -> gr::high_res_timer_type"""
    return _wxgui_swig.high_res_timer_epoch()

_wxgui_swig.TRIG_MODE_FREE_swigconstant(_wxgui_swig)
TRIG_MODE_FREE = _wxgui_swig.TRIG_MODE_FREE

_wxgui_swig.TRIG_MODE_AUTO_swigconstant(_wxgui_swig)
TRIG_MODE_AUTO = _wxgui_swig.TRIG_MODE_AUTO

_wxgui_swig.TRIG_MODE_NORM_swigconstant(_wxgui_swig)
TRIG_MODE_NORM = _wxgui_swig.TRIG_MODE_NORM

_wxgui_swig.TRIG_MODE_STRIPCHART_swigconstant(_wxgui_swig)
TRIG_MODE_STRIPCHART = _wxgui_swig.TRIG_MODE_STRIPCHART

_wxgui_swig.TRIG_SLOPE_POS_swigconstant(_wxgui_swig)
TRIG_SLOPE_POS = _wxgui_swig.TRIG_SLOPE_POS

_wxgui_swig.TRIG_SLOPE_NEG_swigconstant(_wxgui_swig)
TRIG_SLOPE_NEG = _wxgui_swig.TRIG_SLOPE_NEG
class oscope_sink_x(object):
    """
    Abstract class for python oscilloscope module.

    Don't instantiate this. Use gr::blocks::oscope_sink_f instead.
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _wxgui_swig.delete_oscope_sink_x
    __del__ = lambda self: None

    def set_update_rate(self, update_rate):
        """set_update_rate(oscope_sink_x self, double update_rate) -> bool"""
        return _wxgui_swig.oscope_sink_x_set_update_rate(self, update_rate)


    def set_decimation_count(self, decimation_count):
        """set_decimation_count(oscope_sink_x self, int decimation_count) -> bool"""
        return _wxgui_swig.oscope_sink_x_set_decimation_count(self, decimation_count)


    def set_trigger_channel(self, channel):
        """set_trigger_channel(oscope_sink_x self, int channel) -> bool"""
        return _wxgui_swig.oscope_sink_x_set_trigger_channel(self, channel)


    def set_trigger_mode(self, mode):
        """set_trigger_mode(oscope_sink_x self, gr::wxgui::trigger_mode mode) -> bool"""
        return _wxgui_swig.oscope_sink_x_set_trigger_mode(self, mode)


    def set_trigger_slope(self, slope):
        """set_trigger_slope(oscope_sink_x self, gr::wxgui::trigger_slope slope) -> bool"""
        return _wxgui_swig.oscope_sink_x_set_trigger_slope(self, slope)


    def set_trigger_level(self, trigger_level):
        """set_trigger_level(oscope_sink_x self, double trigger_level) -> bool"""
        return _wxgui_swig.oscope_sink_x_set_trigger_level(self, trigger_level)


    def set_trigger_level_auto(self):
        """set_trigger_level_auto(oscope_sink_x self) -> bool"""
        return _wxgui_swig.oscope_sink_x_set_trigger_level_auto(self)


    def set_sample_rate(self, sample_rate):
        """set_sample_rate(oscope_sink_x self, double sample_rate) -> bool"""
        return _wxgui_swig.oscope_sink_x_set_sample_rate(self, sample_rate)


    def set_num_channels(self, nchannels):
        """set_num_channels(oscope_sink_x self, int nchannels) -> bool"""
        return _wxgui_swig.oscope_sink_x_set_num_channels(self, nchannels)


    def num_channels(self):
        """num_channels(oscope_sink_x self) -> int"""
        return _wxgui_swig.oscope_sink_x_num_channels(self)


    def sample_rate(self):
        """sample_rate(oscope_sink_x self) -> double"""
        return _wxgui_swig.oscope_sink_x_sample_rate(self)


    def update_rate(self):
        """update_rate(oscope_sink_x self) -> double"""
        return _wxgui_swig.oscope_sink_x_update_rate(self)


    def get_decimation_count(self):
        """get_decimation_count(oscope_sink_x self) -> int"""
        return _wxgui_swig.oscope_sink_x_get_decimation_count(self)


    def get_trigger_channel(self):
        """get_trigger_channel(oscope_sink_x self) -> int"""
        return _wxgui_swig.oscope_sink_x_get_trigger_channel(self)


    def get_trigger_mode(self):
        """get_trigger_mode(oscope_sink_x self) -> gr::wxgui::trigger_mode"""
        return _wxgui_swig.oscope_sink_x_get_trigger_mode(self)


    def get_trigger_slope(self):
        """get_trigger_slope(oscope_sink_x self) -> gr::wxgui::trigger_slope"""
        return _wxgui_swig.oscope_sink_x_get_trigger_slope(self)


    def get_trigger_level(self):
        """get_trigger_level(oscope_sink_x self) -> double"""
        return _wxgui_swig.oscope_sink_x_get_trigger_level(self)


    def get_samples_per_output_record(self):
        """get_samples_per_output_record(oscope_sink_x self) -> int"""
        return _wxgui_swig.oscope_sink_x_get_samples_per_output_record(self)


    def work(self, noutput_items, input_items, output_items):
        """work(oscope_sink_x self, int noutput_items, gr_vector_const_void_star & input_items, gr_vector_void_star & output_items) -> int"""
        return _wxgui_swig.oscope_sink_x_work(self, noutput_items, input_items, output_items)

oscope_sink_x_swigregister = _wxgui_swig.oscope_sink_x_swigregister
oscope_sink_x_swigregister(oscope_sink_x)

class histo_sink_f(object):
    """
    Histogram module.

    Constructor Specific Documentation:



    Args:
        msgq : 
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def make(msgq):
        """
        make(msg_queue_sptr msgq) -> histo_sink_f_sptr

        Histogram module.

        Constructor Specific Documentation:



        Args:
            msgq : 
        """
        return _wxgui_swig.histo_sink_f_make(msgq)

    make = staticmethod(make)

    def get_frame_size(self):
        """get_frame_size(histo_sink_f self) -> unsigned int"""
        return _wxgui_swig.histo_sink_f_get_frame_size(self)


    def get_num_bins(self):
        """get_num_bins(histo_sink_f self) -> unsigned int"""
        return _wxgui_swig.histo_sink_f_get_num_bins(self)


    def set_frame_size(self, frame_size):
        """set_frame_size(histo_sink_f self, unsigned int frame_size)"""
        return _wxgui_swig.histo_sink_f_set_frame_size(self, frame_size)


    def set_num_bins(self, num_bins):
        """set_num_bins(histo_sink_f self, unsigned int num_bins)"""
        return _wxgui_swig.histo_sink_f_set_num_bins(self, num_bins)

    __swig_destroy__ = _wxgui_swig.delete_histo_sink_f
    __del__ = lambda self: None
histo_sink_f_swigregister = _wxgui_swig.histo_sink_f_swigregister
histo_sink_f_swigregister(histo_sink_f)

def histo_sink_f_make(msgq):
    """
    histo_sink_f_make(msg_queue_sptr msgq) -> histo_sink_f_sptr

    Histogram module.

    Constructor Specific Documentation:



    Args:
        msgq : 
    """
    return _wxgui_swig.histo_sink_f_make(msgq)

class oscope_sink_f(oscope_sink_x):
    """
    Building block for python oscilloscope module.

    Accepts multiple float streams.

    Constructor Specific Documentation:



    Args:
        sampling_rate : 
        msgq : 
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def make(sampling_rate, msgq):
        """
        make(double sampling_rate, msg_queue_sptr msgq) -> oscope_sink_f_sptr

        Building block for python oscilloscope module.

        Accepts multiple float streams.

        Constructor Specific Documentation:



        Args:
            sampling_rate : 
            msgq : 
        """
        return _wxgui_swig.oscope_sink_f_make(sampling_rate, msgq)

    make = staticmethod(make)
    __swig_destroy__ = _wxgui_swig.delete_oscope_sink_f
    __del__ = lambda self: None
oscope_sink_f_swigregister = _wxgui_swig.oscope_sink_f_swigregister
oscope_sink_f_swigregister(oscope_sink_f)

def oscope_sink_f_make(sampling_rate, msgq):
    """
    oscope_sink_f_make(double sampling_rate, msg_queue_sptr msgq) -> oscope_sink_f_sptr

    Building block for python oscilloscope module.

    Accepts multiple float streams.

    Constructor Specific Documentation:



    Args:
        sampling_rate : 
        msgq : 
    """
    return _wxgui_swig.oscope_sink_f_make(sampling_rate, msgq)

class histo_sink_f_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::wxgui::histo_sink_f)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::wxgui::histo_sink_f)> self) -> histo_sink_f_sptr
        __init__(boost::shared_ptr<(gr::wxgui::histo_sink_f)> self, histo_sink_f p) -> histo_sink_f_sptr
        """
        this = _wxgui_swig.new_histo_sink_f_sptr(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def __deref__(self):
        """__deref__(histo_sink_f_sptr self) -> histo_sink_f"""
        return _wxgui_swig.histo_sink_f_sptr___deref__(self)

    __swig_destroy__ = _wxgui_swig.delete_histo_sink_f_sptr
    __del__ = lambda self: None

    def make(self, msgq):
        """
        make(histo_sink_f_sptr self, msg_queue_sptr msgq) -> histo_sink_f_sptr

        Histogram module.

        Constructor Specific Documentation:



        Args:
            msgq : 
        """
        return _wxgui_swig.histo_sink_f_sptr_make(self, msgq)


    def get_frame_size(self):
        """get_frame_size(histo_sink_f_sptr self) -> unsigned int"""
        return _wxgui_swig.histo_sink_f_sptr_get_frame_size(self)


    def get_num_bins(self):
        """get_num_bins(histo_sink_f_sptr self) -> unsigned int"""
        return _wxgui_swig.histo_sink_f_sptr_get_num_bins(self)


    def set_frame_size(self, frame_size):
        """set_frame_size(histo_sink_f_sptr self, unsigned int frame_size)"""
        return _wxgui_swig.histo_sink_f_sptr_set_frame_size(self, frame_size)


    def set_num_bins(self, num_bins):
        """set_num_bins(histo_sink_f_sptr self, unsigned int num_bins)"""
        return _wxgui_swig.histo_sink_f_sptr_set_num_bins(self, num_bins)


    def history(self):
        """history(histo_sink_f_sptr self) -> unsigned int"""
        return _wxgui_swig.histo_sink_f_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(histo_sink_f_sptr self, int which, int delay)
        declare_sample_delay(histo_sink_f_sptr self, unsigned int delay)
        """
        return _wxgui_swig.histo_sink_f_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(histo_sink_f_sptr self, int which) -> unsigned int"""
        return _wxgui_swig.histo_sink_f_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(histo_sink_f_sptr self) -> int"""
        return _wxgui_swig.histo_sink_f_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(histo_sink_f_sptr self) -> double"""
        return _wxgui_swig.histo_sink_f_sptr_relative_rate(self)


    def start(self):
        """start(histo_sink_f_sptr self) -> bool"""
        return _wxgui_swig.histo_sink_f_sptr_start(self)


    def stop(self):
        """stop(histo_sink_f_sptr self) -> bool"""
        return _wxgui_swig.histo_sink_f_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(histo_sink_f_sptr self, unsigned int which_input) -> uint64_t"""
        return _wxgui_swig.histo_sink_f_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(histo_sink_f_sptr self, unsigned int which_output) -> uint64_t"""
        return _wxgui_swig.histo_sink_f_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(histo_sink_f_sptr self) -> int"""
        return _wxgui_swig.histo_sink_f_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(histo_sink_f_sptr self, int m)"""
        return _wxgui_swig.histo_sink_f_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(histo_sink_f_sptr self)"""
        return _wxgui_swig.histo_sink_f_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(histo_sink_f_sptr self) -> bool"""
        return _wxgui_swig.histo_sink_f_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(histo_sink_f_sptr self, int m)"""
        return _wxgui_swig.histo_sink_f_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(histo_sink_f_sptr self) -> int"""
        return _wxgui_swig.histo_sink_f_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(histo_sink_f_sptr self, int i) -> long"""
        return _wxgui_swig.histo_sink_f_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(histo_sink_f_sptr self, long max_output_buffer)
        set_max_output_buffer(histo_sink_f_sptr self, int port, long max_output_buffer)
        """
        return _wxgui_swig.histo_sink_f_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(histo_sink_f_sptr self, int i) -> long"""
        return _wxgui_swig.histo_sink_f_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(histo_sink_f_sptr self, long min_output_buffer)
        set_min_output_buffer(histo_sink_f_sptr self, int port, long min_output_buffer)
        """
        return _wxgui_swig.histo_sink_f_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(histo_sink_f_sptr self, int which) -> float
        pc_input_buffers_full(histo_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.histo_sink_f_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(histo_sink_f_sptr self, int which) -> float
        pc_input_buffers_full_avg(histo_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.histo_sink_f_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(histo_sink_f_sptr self, int which) -> float
        pc_input_buffers_full_var(histo_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.histo_sink_f_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(histo_sink_f_sptr self, int which) -> float
        pc_output_buffers_full(histo_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.histo_sink_f_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(histo_sink_f_sptr self, int which) -> float
        pc_output_buffers_full_avg(histo_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.histo_sink_f_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(histo_sink_f_sptr self, int which) -> float
        pc_output_buffers_full_var(histo_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.histo_sink_f_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(histo_sink_f_sptr self) -> float"""
        return _wxgui_swig.histo_sink_f_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(histo_sink_f_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _wxgui_swig.histo_sink_f_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(histo_sink_f_sptr self)"""
        return _wxgui_swig.histo_sink_f_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(histo_sink_f_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _wxgui_swig.histo_sink_f_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(histo_sink_f_sptr self) -> int"""
        return _wxgui_swig.histo_sink_f_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(histo_sink_f_sptr self) -> int"""
        return _wxgui_swig.histo_sink_f_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(histo_sink_f_sptr self, int priority) -> int"""
        return _wxgui_swig.histo_sink_f_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(histo_sink_f_sptr self) -> std::string"""
        return _wxgui_swig.histo_sink_f_sptr_name(self)


    def symbol_name(self):
        """symbol_name(histo_sink_f_sptr self) -> std::string"""
        return _wxgui_swig.histo_sink_f_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(histo_sink_f_sptr self) -> io_signature_sptr"""
        return _wxgui_swig.histo_sink_f_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(histo_sink_f_sptr self) -> io_signature_sptr"""
        return _wxgui_swig.histo_sink_f_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(histo_sink_f_sptr self) -> long"""
        return _wxgui_swig.histo_sink_f_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(histo_sink_f_sptr self) -> basic_block_sptr"""
        return _wxgui_swig.histo_sink_f_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(histo_sink_f_sptr self, int ninputs, int noutputs) -> bool"""
        return _wxgui_swig.histo_sink_f_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(histo_sink_f_sptr self) -> std::string"""
        return _wxgui_swig.histo_sink_f_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(histo_sink_f_sptr self, std::string name)"""
        return _wxgui_swig.histo_sink_f_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(histo_sink_f_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _wxgui_swig.histo_sink_f_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(histo_sink_f_sptr self) -> swig_int_ptr"""
        return _wxgui_swig.histo_sink_f_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(histo_sink_f_sptr self) -> swig_int_ptr"""
        return _wxgui_swig.histo_sink_f_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(histo_sink_f_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _wxgui_swig.histo_sink_f_sptr_message_subscribers(self, which_port)

histo_sink_f_sptr_swigregister = _wxgui_swig.histo_sink_f_sptr_swigregister
histo_sink_f_sptr_swigregister(histo_sink_f_sptr)

histo_sink_f_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
histo_sink_f = histo_sink_f.make;

class oscope_sink_f_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::wxgui::oscope_sink_f)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::wxgui::oscope_sink_f)> self) -> oscope_sink_f_sptr
        __init__(boost::shared_ptr<(gr::wxgui::oscope_sink_f)> self, oscope_sink_f p) -> oscope_sink_f_sptr
        """
        this = _wxgui_swig.new_oscope_sink_f_sptr(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def __deref__(self):
        """__deref__(oscope_sink_f_sptr self) -> oscope_sink_f"""
        return _wxgui_swig.oscope_sink_f_sptr___deref__(self)

    __swig_destroy__ = _wxgui_swig.delete_oscope_sink_f_sptr
    __del__ = lambda self: None

    def make(self, sampling_rate, msgq):
        """
        make(oscope_sink_f_sptr self, double sampling_rate, msg_queue_sptr msgq) -> oscope_sink_f_sptr

        Building block for python oscilloscope module.

        Accepts multiple float streams.

        Constructor Specific Documentation:



        Args:
            sampling_rate : 
            msgq : 
        """
        return _wxgui_swig.oscope_sink_f_sptr_make(self, sampling_rate, msgq)


    def set_update_rate(self, update_rate):
        """set_update_rate(oscope_sink_f_sptr self, double update_rate) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_set_update_rate(self, update_rate)


    def set_decimation_count(self, decimation_count):
        """set_decimation_count(oscope_sink_f_sptr self, int decimation_count) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_set_decimation_count(self, decimation_count)


    def set_trigger_channel(self, channel):
        """set_trigger_channel(oscope_sink_f_sptr self, int channel) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_set_trigger_channel(self, channel)


    def set_trigger_mode(self, mode):
        """set_trigger_mode(oscope_sink_f_sptr self, gr::wxgui::trigger_mode mode) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_set_trigger_mode(self, mode)


    def set_trigger_slope(self, slope):
        """set_trigger_slope(oscope_sink_f_sptr self, gr::wxgui::trigger_slope slope) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_set_trigger_slope(self, slope)


    def set_trigger_level(self, trigger_level):
        """set_trigger_level(oscope_sink_f_sptr self, double trigger_level) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_set_trigger_level(self, trigger_level)


    def set_trigger_level_auto(self):
        """set_trigger_level_auto(oscope_sink_f_sptr self) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_set_trigger_level_auto(self)


    def set_sample_rate(self, sample_rate):
        """set_sample_rate(oscope_sink_f_sptr self, double sample_rate) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_set_sample_rate(self, sample_rate)


    def set_num_channels(self, nchannels):
        """set_num_channels(oscope_sink_f_sptr self, int nchannels) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_set_num_channels(self, nchannels)


    def num_channels(self):
        """num_channels(oscope_sink_f_sptr self) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_num_channels(self)


    def sample_rate(self):
        """sample_rate(oscope_sink_f_sptr self) -> double"""
        return _wxgui_swig.oscope_sink_f_sptr_sample_rate(self)


    def update_rate(self):
        """update_rate(oscope_sink_f_sptr self) -> double"""
        return _wxgui_swig.oscope_sink_f_sptr_update_rate(self)


    def get_decimation_count(self):
        """get_decimation_count(oscope_sink_f_sptr self) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_get_decimation_count(self)


    def get_trigger_channel(self):
        """get_trigger_channel(oscope_sink_f_sptr self) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_get_trigger_channel(self)


    def get_trigger_mode(self):
        """get_trigger_mode(oscope_sink_f_sptr self) -> gr::wxgui::trigger_mode"""
        return _wxgui_swig.oscope_sink_f_sptr_get_trigger_mode(self)


    def get_trigger_slope(self):
        """get_trigger_slope(oscope_sink_f_sptr self) -> gr::wxgui::trigger_slope"""
        return _wxgui_swig.oscope_sink_f_sptr_get_trigger_slope(self)


    def get_trigger_level(self):
        """get_trigger_level(oscope_sink_f_sptr self) -> double"""
        return _wxgui_swig.oscope_sink_f_sptr_get_trigger_level(self)


    def get_samples_per_output_record(self):
        """get_samples_per_output_record(oscope_sink_f_sptr self) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_get_samples_per_output_record(self)


    def work(self, noutput_items, input_items, output_items):
        """work(oscope_sink_f_sptr self, int noutput_items, gr_vector_const_void_star & input_items, gr_vector_void_star & output_items) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_work(self, noutput_items, input_items, output_items)


    def history(self):
        """history(oscope_sink_f_sptr self) -> unsigned int"""
        return _wxgui_swig.oscope_sink_f_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(oscope_sink_f_sptr self, int which, int delay)
        declare_sample_delay(oscope_sink_f_sptr self, unsigned int delay)
        """
        return _wxgui_swig.oscope_sink_f_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(oscope_sink_f_sptr self, int which) -> unsigned int"""
        return _wxgui_swig.oscope_sink_f_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(oscope_sink_f_sptr self) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(oscope_sink_f_sptr self) -> double"""
        return _wxgui_swig.oscope_sink_f_sptr_relative_rate(self)


    def start(self):
        """start(oscope_sink_f_sptr self) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_start(self)


    def stop(self):
        """stop(oscope_sink_f_sptr self) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(oscope_sink_f_sptr self, unsigned int which_input) -> uint64_t"""
        return _wxgui_swig.oscope_sink_f_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(oscope_sink_f_sptr self, unsigned int which_output) -> uint64_t"""
        return _wxgui_swig.oscope_sink_f_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(oscope_sink_f_sptr self) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(oscope_sink_f_sptr self, int m)"""
        return _wxgui_swig.oscope_sink_f_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(oscope_sink_f_sptr self)"""
        return _wxgui_swig.oscope_sink_f_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(oscope_sink_f_sptr self) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(oscope_sink_f_sptr self, int m)"""
        return _wxgui_swig.oscope_sink_f_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(oscope_sink_f_sptr self) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(oscope_sink_f_sptr self, int i) -> long"""
        return _wxgui_swig.oscope_sink_f_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(oscope_sink_f_sptr self, long max_output_buffer)
        set_max_output_buffer(oscope_sink_f_sptr self, int port, long max_output_buffer)
        """
        return _wxgui_swig.oscope_sink_f_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(oscope_sink_f_sptr self, int i) -> long"""
        return _wxgui_swig.oscope_sink_f_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(oscope_sink_f_sptr self, long min_output_buffer)
        set_min_output_buffer(oscope_sink_f_sptr self, int port, long min_output_buffer)
        """
        return _wxgui_swig.oscope_sink_f_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(oscope_sink_f_sptr self, int which) -> float
        pc_input_buffers_full(oscope_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.oscope_sink_f_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(oscope_sink_f_sptr self, int which) -> float
        pc_input_buffers_full_avg(oscope_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.oscope_sink_f_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(oscope_sink_f_sptr self, int which) -> float
        pc_input_buffers_full_var(oscope_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.oscope_sink_f_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(oscope_sink_f_sptr self, int which) -> float
        pc_output_buffers_full(oscope_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.oscope_sink_f_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(oscope_sink_f_sptr self, int which) -> float
        pc_output_buffers_full_avg(oscope_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.oscope_sink_f_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(oscope_sink_f_sptr self, int which) -> float
        pc_output_buffers_full_var(oscope_sink_f_sptr self) -> pmt_vector_float
        """
        return _wxgui_swig.oscope_sink_f_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(oscope_sink_f_sptr self) -> float"""
        return _wxgui_swig.oscope_sink_f_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(oscope_sink_f_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _wxgui_swig.oscope_sink_f_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(oscope_sink_f_sptr self)"""
        return _wxgui_swig.oscope_sink_f_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(oscope_sink_f_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _wxgui_swig.oscope_sink_f_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(oscope_sink_f_sptr self) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(oscope_sink_f_sptr self) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(oscope_sink_f_sptr self, int priority) -> int"""
        return _wxgui_swig.oscope_sink_f_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(oscope_sink_f_sptr self) -> std::string"""
        return _wxgui_swig.oscope_sink_f_sptr_name(self)


    def symbol_name(self):
        """symbol_name(oscope_sink_f_sptr self) -> std::string"""
        return _wxgui_swig.oscope_sink_f_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(oscope_sink_f_sptr self) -> io_signature_sptr"""
        return _wxgui_swig.oscope_sink_f_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(oscope_sink_f_sptr self) -> io_signature_sptr"""
        return _wxgui_swig.oscope_sink_f_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(oscope_sink_f_sptr self) -> long"""
        return _wxgui_swig.oscope_sink_f_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(oscope_sink_f_sptr self) -> basic_block_sptr"""
        return _wxgui_swig.oscope_sink_f_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(oscope_sink_f_sptr self, int ninputs, int noutputs) -> bool"""
        return _wxgui_swig.oscope_sink_f_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(oscope_sink_f_sptr self) -> std::string"""
        return _wxgui_swig.oscope_sink_f_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(oscope_sink_f_sptr self, std::string name)"""
        return _wxgui_swig.oscope_sink_f_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(oscope_sink_f_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _wxgui_swig.oscope_sink_f_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(oscope_sink_f_sptr self) -> swig_int_ptr"""
        return _wxgui_swig.oscope_sink_f_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(oscope_sink_f_sptr self) -> swig_int_ptr"""
        return _wxgui_swig.oscope_sink_f_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(oscope_sink_f_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _wxgui_swig.oscope_sink_f_sptr_message_subscribers(self, which_port)

oscope_sink_f_sptr_swigregister = _wxgui_swig.oscope_sink_f_sptr_swigregister
oscope_sink_f_sptr_swigregister(oscope_sink_f_sptr)

oscope_sink_f_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
oscope_sink_f = oscope_sink_f.make;



